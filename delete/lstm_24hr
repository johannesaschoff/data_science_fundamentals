{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "51dea94f-c9a3-4f2f-8a96-4803948f8eb4",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib.dates import DateFormatter\n",
    "import statsmodels.api as st\n",
    "\n",
    "from sklearn.model_selection import TimeSeriesSplit\n",
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9cd8c6a8-107e-43b1-8991-9e45629226f0",
   "metadata": {},
   "source": [
    "### Import the Data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b9451665-1e39-49d4-a287-29cc112cff2f",
   "metadata": {},
   "source": [
    "# Warum fehlen 24 Werte bei temperature und 118 bei stores closed that day?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "0f2bf204-cf03-4790-96f1-01558217aefb",
   "metadata": {},
   "outputs": [],
   "source": [
    "start_date_f = \"2021-09-30\"\n",
    "start_date_p = \"2021-10-01\"\n",
    "end_date = \"2023-11-08\"\n",
    "\n",
    "# Create a boolean mask based on the date range\n",
    "dates = lambda df : (df.index >= start_date_f) & (df.index <= end_date)\n",
    "dates_p = lambda df : (df.index >= start_date_p) & (df.index <= end_date)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e54a82ca-b5c6-4322-959d-9ab215949cb9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Target variable (stationary)\n",
    "passengers_df = pd.read_csv(\"passengers_stationary.csv\").set_index(\"datetime\")\n",
    "passengers_df.index = pd.to_datetime(passengers_df.index, format = \"ISO8601\")\n",
    "\n",
    "passengers = passengers_df[[\"total\"]].dropna()\n",
    "\n",
    "# Features\n",
    "features = pd.read_csv(\"features.csv\").set_index(\"Unnamed: 0\")\n",
    "features.rename_axis('datetime', inplace = True)\n",
    "features.index = pd.to_datetime(features.index, format = \"ISO8601\")\n",
    "\n",
    "# Relevant events & days\n",
    "binary = pd.read_csv(\"data/merged_features-2.csv\").set_index(\"Date\")\n",
    "\n",
    "# Set index to DateTime\n",
    "binary.index = pd.to_datetime(binary.index, format = \"ISO8601\")\n",
    "\n",
    "# Restrict to relevant dates\n",
    "passengers = passengers[dates_p(passengers)]\n",
    "features = features[dates(features)]\n",
    "binary = binary[dates(binary)]\n",
    "\n",
    "# Drop uneccessary columns\n",
    "binary.drop(columns = ['bhfs_north', 'bhfs_middle', 'bhfs_south','PPP', 'Retail', 'Traffic', 'Guests',\n",
    "                    'Population', \"Sunshine\"], inplace = True)\n",
    "\n",
    "# Why temperature na?\n",
    "# Add temperature as non-binary features\n",
    "temp = binary[\"temperature\"]\n",
    "binary.drop(columns = \"temperature\", inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c0026fa2-5adb-41fd-94db-eff789caf070",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Public Holiday ZH             0\n",
       "School Holidays ZH            0\n",
       "Public Holiday SH             0\n",
       "School Holidays SH            0\n",
       "Public Holiday TG             0\n",
       "School Holidays TG            0\n",
       "Public Holiday SG             0\n",
       "School Holidays SG            0\n",
       "Public Holiday SZ             0\n",
       "School Holidays SZ            0\n",
       "Public Holiday ZG             0\n",
       "School Holidays ZG            0\n",
       "Public Holiday AG             0\n",
       "School Holidays AG            0\n",
       "clear-night                   0\n",
       "cloudy                        0\n",
       "fog                           0\n",
       "partly-cloudy-day             0\n",
       "partly-cloudy-night           0\n",
       "rain                          0\n",
       "snow                          0\n",
       "wind                          0\n",
       "Weekday_Friday                0\n",
       "Weekday_Monday                0\n",
       "Weekday_Saturday              0\n",
       "Weekday_Sunday                0\n",
       "Weekday_Thursday              0\n",
       "Weekday_Tuesday               0\n",
       "Weekday_Wednesday             0\n",
       "stores_closed_on_that_day    98\n",
       "dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "binary.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5020a1cf-1eef-457b-8c07-974d4878e70f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Fillna (why is it na?)\n",
    "binary.stores_closed_on_that_day = binary.stores_closed_on_that_day.fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "034ed093-e311-44d1-88f7-db1bf3d6d9fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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8ssvIzk52edKrqCgICQmJuKHH37AkCFDEBoa6t2XF2rs2LFYuHAhHn74Ydxwww3Iz8/HK6+8gpiYGBw6dKhB//DwcAwePBgvvPCC9+qq/fv38zJy8g8/T3wmootg165dwp133im0a9dOUCqVgk6nEzIzM4UXX3xRKC0t9fZzu93CP//5T6F9+/aCQqEQwsPDhdtuu03Iz8/3Wd/AgQOFyy67rMHPOXF11ZtvvtloHbt37xYmTJggREZGCgqFQoiOjhYGDx4sfPjhh94+jV1dVVBQIIwfP14ICQkRgoKChJEjRwp79uwREhMThTvvvNPnZ8yaNUtITk4WZDKZAED47LPPBEFoeHWVINRfIfXss88KiYmJgkKhEGJiYoSHHnpIqKqq8umXmJgojBkzpsH2DBw4UBg4cGCj23oqAMIjjzzS6GtNXRHWnH1lt9uFKVOmCHFxcYJarRZ69OghLFq0qNFtXbVqlZCZmSmoVCoBgHe/nbi6qqyszKf/nXfeKeh0uka3+fT/+zfeeENISkoSVCqV0LFjR2Hu3Lne9Ta2Hz744AMhNTVVUCgUQkZGhvDf//73TLuPqMVIBEEQ/JawiIhINCQSCR555BG8//77/i6FCADn5BAREZFIMeQQERGRKHHiMRERXRSc/UBtDUdyiIiISJQYcoiIiEiUGHKIiIhIlDgnp5V5PB4UFhYiKCjojLfNJyIiosYJgoCamhrExsZCKm16vIYhp5UVFhYiISHB32UQEREFvPz8/DP+uRCGnFZ24m/SrO85AHoZd/+5kIYG+7uEgKPu09PfJQSkd4L6+ruEgNSxXeN/n4zO7IffC/1dQsBx2a349YNbm/ybeCfwW7aVnThFpZfJoZdz958LmULh7xICjlqt9ncJAUmp0fm7hICk0er9XUJAkqv4fjtfZ5v2wYnHREREJEoMOURERCRKDDlEREQkSgw5REREJEoMOURERCRKDDlEREQkSgw5REREJEoMOURERCRKDDlEREQkSgw5REREJEoMOURERCRKDDlEREQkSgw5REREJEoMOURERCRKDDlEREQkSgw5REREJEoMOURERCRKDDlEREQkSgw5REREJEoMOURERCRKDDlEREQkSgw5REREJEoMOURERCRKDDlEREQkSgw5REREJEoMOURERCRKDDlEREQkSgw5REREJEoMOURERCRKDDlE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",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Show correlation matrix\n",
    "correlation_matrix = features[['PPP', 'Population', 'Guests', 'Traffic', 'Sunshine', 'Retail']].corr().round(2)\n",
    "\n",
    "\n",
    "# Visualize the correlation in a heatmap and annotate\n",
    "\n",
    "fig, ax = plt.subplots(figsize=(8, 6))\n",
    "\n",
    "im = ax.imshow(correlation_matrix, cmap=sns.diverging_palette(250, 10, center=\"light\",as_cmap=True))\n",
    "ax.set_xticks(range(len(correlation_matrix.columns)), correlation_matrix.columns, rotation=90)\n",
    "ax.set_yticks(range(len(correlation_matrix.columns)), correlation_matrix.columns)\n",
    "\n",
    "# Loop over data dimensions and create text annotations.\n",
    "for i in range(len(correlation_matrix.columns)):\n",
    "    for j in range(len(correlation_matrix.columns)):\n",
    "        text = ax.text(j, i, correlation_matrix.iloc[i, j],\n",
    "                       ha=\"center\", va=\"center\", color=\"w\")\n",
    "\n",
    "# Set labels and title\n",
    "ax.set_title('Correlation Heatmap')\n",
    "fig.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13762a9a-25a6-4d74-b615-c099df9c9a1f",
   "metadata": {},
   "source": [
    "# Data normalization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "0e029271-e768-4ac7-b074-26b75fc91f01",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Apply log to the non binary features as all were skewed (see Notebook XXX)\n",
    "features = np.log(features)\n",
    "\n",
    "# Apply same diff transformation to hourly data as to target\n",
    "features[\"Traffic\"] = features[\"Traffic\"].diff(24)\n",
    "features[\"Sunshine\"] = features[\"Sunshine\"].diff(24)\n",
    "features = features.dropna()\n",
    "\n",
    "# Concatenate features\n",
    "features = pd.merge(features, binary, left_index = True, right_index = True, how = \"left\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "eecb26b5-fab5-46a8-ba65-2e478cfe9e74",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PPP</th>\n",
       "      <th>Population</th>\n",
       "      <th>Guests</th>\n",
       "      <th>Traffic</th>\n",
       "      <th>Sunshine</th>\n",
       "      <th>Retail</th>\n",
       "      <th>Public Holiday ZH</th>\n",
       "      <th>School Holidays ZH</th>\n",
       "      <th>Public Holiday SH</th>\n",
       "      <th>School Holidays SH</th>\n",
       "      <th>...</th>\n",
       "      <th>snow</th>\n",
       "      <th>wind</th>\n",
       "      <th>Weekday_Friday</th>\n",
       "      <th>Weekday_Monday</th>\n",
       "      <th>Weekday_Saturday</th>\n",
       "      <th>Weekday_Sunday</th>\n",
       "      <th>Weekday_Thursday</th>\n",
       "      <th>Weekday_Tuesday</th>\n",
       "      <th>Weekday_Wednesday</th>\n",
       "      <th>stores_closed_on_that_day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2021-12-25 00:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>0.577775</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 01:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>0.482128</td>\n",
       "      <td>-0.405465</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 02:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>0.150479</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 03:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-0.168551</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 04:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-0.655667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 05:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-1.086728</td>\n",
       "      <td>0.405465</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 06:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-1.148291</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 07:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-1.485258</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 08:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-1.366204</td>\n",
       "      <td>0.309661</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 09:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-1.066451</td>\n",
       "      <td>-0.648443</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 10:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-0.827535</td>\n",
       "      <td>-0.079160</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 11:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-0.597565</td>\n",
       "      <td>-1.147835</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 12:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-0.521798</td>\n",
       "      <td>-1.042186</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 13:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-0.433516</td>\n",
       "      <td>0.123576</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 14:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-0.449578</td>\n",
       "      <td>0.843678</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 15:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-0.337853</td>\n",
       "      <td>0.953958</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 16:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-0.265822</td>\n",
       "      <td>1.051017</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 17:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-0.261276</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 18:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-0.085743</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 19:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>0.159834</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 20:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>0.211251</td>\n",
       "      <td>-0.287682</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 21:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>0.143527</td>\n",
       "      <td>-0.405465</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 22:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>0.033107</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021-12-25 23:00:00</th>\n",
       "      <td>4.621044</td>\n",
       "      <td>12.987288</td>\n",
       "      <td>12.208285</td>\n",
       "      <td>-0.137277</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.765408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 00:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>0.318504</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 01:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>0.163434</td>\n",
       "      <td>-0.693147</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 02:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.125636</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 03:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.304325</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 04:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.468978</td>\n",
       "      <td>-0.693147</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 05:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.701409</td>\n",
       "      <td>0.693147</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 06:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.604117</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 07:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.811079</td>\n",
       "      <td>2.564949</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 08:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.974779</td>\n",
       "      <td>2.894500</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 09:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.749332</td>\n",
       "      <td>1.844103</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 10:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.608434</td>\n",
       "      <td>1.404282</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 11:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.358717</td>\n",
       "      <td>0.397608</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 12:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.232353</td>\n",
       "      <td>0.295115</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 13:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.146833</td>\n",
       "      <td>1.107753</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 14:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.211594</td>\n",
       "      <td>0.361245</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 15:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.189259</td>\n",
       "      <td>0.365383</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 16:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.188180</td>\n",
       "      <td>1.335671</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 17:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.149287</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 18:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.004699</td>\n",
       "      <td>0.693147</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 19:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>0.169716</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 20:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>0.189950</td>\n",
       "      <td>0.693147</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 21:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>0.046884</td>\n",
       "      <td>0.405465</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 22:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.092909</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-12-25 23:00:00</th>\n",
       "      <td>4.650144</td>\n",
       "      <td>13.002577</td>\n",
       "      <td>12.507232</td>\n",
       "      <td>-0.296989</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.775411</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>48 rows × 36 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                          PPP  Population     Guests   Traffic  Sunshine  \\\n",
       "2021-12-25 00:00:00  4.621044   12.987288  12.208285  0.577775  0.000000   \n",
       "2021-12-25 01:00:00  4.621044   12.987288  12.208285  0.482128 -0.405465   \n",
       "2021-12-25 02:00:00  4.621044   12.987288  12.208285  0.150479  0.000000   \n",
       "2021-12-25 03:00:00  4.621044   12.987288  12.208285 -0.168551  0.000000   \n",
       "2021-12-25 04:00:00  4.621044   12.987288  12.208285 -0.655667  0.000000   \n",
       "2021-12-25 05:00:00  4.621044   12.987288  12.208285 -1.086728  0.405465   \n",
       "2021-12-25 06:00:00  4.621044   12.987288  12.208285 -1.148291  0.000000   \n",
       "2021-12-25 07:00:00  4.621044   12.987288  12.208285 -1.485258  0.000000   \n",
       "2021-12-25 08:00:00  4.621044   12.987288  12.208285 -1.366204  0.309661   \n",
       "2021-12-25 09:00:00  4.621044   12.987288  12.208285 -1.066451 -0.648443   \n",
       "2021-12-25 10:00:00  4.621044   12.987288  12.208285 -0.827535 -0.079160   \n",
       "2021-12-25 11:00:00  4.621044   12.987288  12.208285 -0.597565 -1.147835   \n",
       "2021-12-25 12:00:00  4.621044   12.987288  12.208285 -0.521798 -1.042186   \n",
       "2021-12-25 13:00:00  4.621044   12.987288  12.208285 -0.433516  0.123576   \n",
       "2021-12-25 14:00:00  4.621044   12.987288  12.208285 -0.449578  0.843678   \n",
       "2021-12-25 15:00:00  4.621044   12.987288  12.208285 -0.337853  0.953958   \n",
       "2021-12-25 16:00:00  4.621044   12.987288  12.208285 -0.265822  1.051017   \n",
       "2021-12-25 17:00:00  4.621044   12.987288  12.208285 -0.261276  0.000000   \n",
       "2021-12-25 18:00:00  4.621044   12.987288  12.208285 -0.085743  0.000000   \n",
       "2021-12-25 19:00:00  4.621044   12.987288  12.208285  0.159834  0.000000   \n",
       "2021-12-25 20:00:00  4.621044   12.987288  12.208285  0.211251 -0.287682   \n",
       "2021-12-25 21:00:00  4.621044   12.987288  12.208285  0.143527 -0.405465   \n",
       "2021-12-25 22:00:00  4.621044   12.987288  12.208285  0.033107  0.000000   \n",
       "2021-12-25 23:00:00  4.621044   12.987288  12.208285 -0.137277  0.000000   \n",
       "2022-12-25 00:00:00  4.650144   13.002577  12.507232  0.318504  0.000000   \n",
       "2022-12-25 01:00:00  4.650144   13.002577  12.507232  0.163434 -0.693147   \n",
       "2022-12-25 02:00:00  4.650144   13.002577  12.507232 -0.125636  0.000000   \n",
       "2022-12-25 03:00:00  4.650144   13.002577  12.507232 -0.304325  0.000000   \n",
       "2022-12-25 04:00:00  4.650144   13.002577  12.507232 -0.468978 -0.693147   \n",
       "2022-12-25 05:00:00  4.650144   13.002577  12.507232 -0.701409  0.693147   \n",
       "2022-12-25 06:00:00  4.650144   13.002577  12.507232 -0.604117  0.000000   \n",
       "2022-12-25 07:00:00  4.650144   13.002577  12.507232 -0.811079  2.564949   \n",
       "2022-12-25 08:00:00  4.650144   13.002577  12.507232 -0.974779  2.894500   \n",
       "2022-12-25 09:00:00  4.650144   13.002577  12.507232 -0.749332  1.844103   \n",
       "2022-12-25 10:00:00  4.650144   13.002577  12.507232 -0.608434  1.404282   \n",
       "2022-12-25 11:00:00  4.650144   13.002577  12.507232 -0.358717  0.397608   \n",
       "2022-12-25 12:00:00  4.650144   13.002577  12.507232 -0.232353  0.295115   \n",
       "2022-12-25 13:00:00  4.650144   13.002577  12.507232 -0.146833  1.107753   \n",
       "2022-12-25 14:00:00  4.650144   13.002577  12.507232 -0.211594  0.361245   \n",
       "2022-12-25 15:00:00  4.650144   13.002577  12.507232 -0.189259  0.365383   \n",
       "2022-12-25 16:00:00  4.650144   13.002577  12.507232 -0.188180  1.335671   \n",
       "2022-12-25 17:00:00  4.650144   13.002577  12.507232 -0.149287  0.000000   \n",
       "2022-12-25 18:00:00  4.650144   13.002577  12.507232 -0.004699  0.693147   \n",
       "2022-12-25 19:00:00  4.650144   13.002577  12.507232  0.169716  0.000000   \n",
       "2022-12-25 20:00:00  4.650144   13.002577  12.507232  0.189950  0.693147   \n",
       "2022-12-25 21:00:00  4.650144   13.002577  12.507232  0.046884  0.405465   \n",
       "2022-12-25 22:00:00  4.650144   13.002577  12.507232 -0.092909  0.000000   \n",
       "2022-12-25 23:00:00  4.650144   13.002577  12.507232 -0.296989  0.000000   \n",
       "\n",
       "                       Retail  Public Holiday ZH  School Holidays ZH  \\\n",
       "2021-12-25 00:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 01:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 02:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 03:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 04:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 05:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 06:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 07:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 08:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 09:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 10:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 11:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 12:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 13:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 14:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 15:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 16:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 17:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 18:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 19:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 20:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 21:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 22:00:00  4.765408                0.0                 1.0   \n",
       "2021-12-25 23:00:00  4.765408                0.0                 1.0   \n",
       "2022-12-25 00:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 01:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 02:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 03:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 04:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 05:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 06:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 07:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 08:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 09:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 10:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 11:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 12:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 13:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 14:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 15:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 16:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 17:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 18:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 19:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 20:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 21:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 22:00:00  4.775411                0.0                 1.0   \n",
       "2022-12-25 23:00:00  4.775411                0.0                 1.0   \n",
       "\n",
       "                     Public Holiday SH  School Holidays SH  ...  snow  wind  \\\n",
       "2021-12-25 00:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 01:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 02:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 03:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 04:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 05:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 06:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 07:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 08:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 09:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 10:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 11:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 12:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 13:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 14:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 15:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 16:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 17:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 18:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 19:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 20:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 21:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 22:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2021-12-25 23:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 00:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 01:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 02:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 03:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 04:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 05:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 06:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 07:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 08:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 09:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 10:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 11:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 12:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 13:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 14:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 15:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 16:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 17:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 18:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 19:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 20:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 21:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 22:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "2022-12-25 23:00:00                0.0                 1.0  ...   0.0   0.0   \n",
       "\n",
       "                     Weekday_Friday  Weekday_Monday  Weekday_Saturday  \\\n",
       "2021-12-25 00:00:00               0               0                 1   \n",
       "2021-12-25 01:00:00               0               0                 1   \n",
       "2021-12-25 02:00:00               0               0                 1   \n",
       "2021-12-25 03:00:00               0               0                 1   \n",
       "2021-12-25 04:00:00               0               0                 1   \n",
       "2021-12-25 05:00:00               0               0                 1   \n",
       "2021-12-25 06:00:00               0               0                 1   \n",
       "2021-12-25 07:00:00               0               0                 1   \n",
       "2021-12-25 08:00:00               0               0                 1   \n",
       "2021-12-25 09:00:00               0               0                 1   \n",
       "2021-12-25 10:00:00               0               0                 1   \n",
       "2021-12-25 11:00:00               0               0                 1   \n",
       "2021-12-25 12:00:00               0               0                 1   \n",
       "2021-12-25 13:00:00               0               0                 1   \n",
       "2021-12-25 14:00:00               0               0                 1   \n",
       "2021-12-25 15:00:00               0               0                 1   \n",
       "2021-12-25 16:00:00               0               0                 1   \n",
       "2021-12-25 17:00:00               0               0                 1   \n",
       "2021-12-25 18:00:00               0               0                 1   \n",
       "2021-12-25 19:00:00               0               0                 1   \n",
       "2021-12-25 20:00:00               0               0                 1   \n",
       "2021-12-25 21:00:00               0               0                 1   \n",
       "2021-12-25 22:00:00               0               0                 1   \n",
       "2021-12-25 23:00:00               0               0                 1   \n",
       "2022-12-25 00:00:00               0               0                 0   \n",
       "2022-12-25 01:00:00               0               0                 0   \n",
       "2022-12-25 02:00:00               0               0                 0   \n",
       "2022-12-25 03:00:00               0               0                 0   \n",
       "2022-12-25 04:00:00               0               0                 0   \n",
       "2022-12-25 05:00:00               0               0                 0   \n",
       "2022-12-25 06:00:00               0               0                 0   \n",
       "2022-12-25 07:00:00               0               0                 0   \n",
       "2022-12-25 08:00:00               0               0                 0   \n",
       "2022-12-25 09:00:00               0               0                 0   \n",
       "2022-12-25 10:00:00               0               0                 0   \n",
       "2022-12-25 11:00:00               0               0                 0   \n",
       "2022-12-25 12:00:00               0               0                 0   \n",
       "2022-12-25 13:00:00               0               0                 0   \n",
       "2022-12-25 14:00:00               0               0                 0   \n",
       "2022-12-25 15:00:00               0               0                 0   \n",
       "2022-12-25 16:00:00               0               0                 0   \n",
       "2022-12-25 17:00:00               0               0                 0   \n",
       "2022-12-25 18:00:00               0               0                 0   \n",
       "2022-12-25 19:00:00               0               0                 0   \n",
       "2022-12-25 20:00:00               0               0                 0   \n",
       "2022-12-25 21:00:00               0               0                 0   \n",
       "2022-12-25 22:00:00               0               0                 0   \n",
       "2022-12-25 23:00:00               0               0                 0   \n",
       "\n",
       "                     Weekday_Sunday  Weekday_Thursday  Weekday_Tuesday  \\\n",
       "2021-12-25 00:00:00               0                 0                0   \n",
       "2021-12-25 01:00:00               0                 0                0   \n",
       "2021-12-25 02:00:00               0                 0                0   \n",
       "2021-12-25 03:00:00               0                 0                0   \n",
       "2021-12-25 04:00:00               0                 0                0   \n",
       "2021-12-25 05:00:00               0                 0                0   \n",
       "2021-12-25 06:00:00               0                 0                0   \n",
       "2021-12-25 07:00:00               0                 0                0   \n",
       "2021-12-25 08:00:00               0                 0                0   \n",
       "2021-12-25 09:00:00               0                 0                0   \n",
       "2021-12-25 10:00:00               0                 0                0   \n",
       "2021-12-25 11:00:00               0                 0                0   \n",
       "2021-12-25 12:00:00               0                 0                0   \n",
       "2021-12-25 13:00:00               0                 0                0   \n",
       "2021-12-25 14:00:00               0                 0                0   \n",
       "2021-12-25 15:00:00               0                 0                0   \n",
       "2021-12-25 16:00:00               0                 0                0   \n",
       "2021-12-25 17:00:00               0                 0                0   \n",
       "2021-12-25 18:00:00               0                 0                0   \n",
       "2021-12-25 19:00:00               0                 0                0   \n",
       "2021-12-25 20:00:00               0                 0                0   \n",
       "2021-12-25 21:00:00               0                 0                0   \n",
       "2021-12-25 22:00:00               0                 0                0   \n",
       "2021-12-25 23:00:00               0                 0                0   \n",
       "2022-12-25 00:00:00               1                 0                0   \n",
       "2022-12-25 01:00:00               1                 0                0   \n",
       "2022-12-25 02:00:00               1                 0                0   \n",
       "2022-12-25 03:00:00               1                 0                0   \n",
       "2022-12-25 04:00:00               1                 0                0   \n",
       "2022-12-25 05:00:00               1                 0                0   \n",
       "2022-12-25 06:00:00               1                 0                0   \n",
       "2022-12-25 07:00:00               1                 0                0   \n",
       "2022-12-25 08:00:00               1                 0                0   \n",
       "2022-12-25 09:00:00               1                 0                0   \n",
       "2022-12-25 10:00:00               1                 0                0   \n",
       "2022-12-25 11:00:00               1                 0                0   \n",
       "2022-12-25 12:00:00               1                 0                0   \n",
       "2022-12-25 13:00:00               1                 0                0   \n",
       "2022-12-25 14:00:00               1                 0                0   \n",
       "2022-12-25 15:00:00               1                 0                0   \n",
       "2022-12-25 16:00:00               1                 0                0   \n",
       "2022-12-25 17:00:00               1                 0                0   \n",
       "2022-12-25 18:00:00               1                 0                0   \n",
       "2022-12-25 19:00:00               1                 0                0   \n",
       "2022-12-25 20:00:00               1                 0                0   \n",
       "2022-12-25 21:00:00               1                 0                0   \n",
       "2022-12-25 22:00:00               1                 0                0   \n",
       "2022-12-25 23:00:00               1                 0                0   \n",
       "\n",
       "                     Weekday_Wednesday  stores_closed_on_that_day  \n",
       "2021-12-25 00:00:00                  0                        1.0  \n",
       "2021-12-25 01:00:00                  0                        1.0  \n",
       "2021-12-25 02:00:00                  0                        1.0  \n",
       "2021-12-25 03:00:00                  0                        1.0  \n",
       "2021-12-25 04:00:00                  0                        1.0  \n",
       "2021-12-25 05:00:00                  0                        1.0  \n",
       "2021-12-25 06:00:00                  0                        1.0  \n",
       "2021-12-25 07:00:00                  0                        1.0  \n",
       "2021-12-25 08:00:00                  0                        1.0  \n",
       "2021-12-25 09:00:00                  0                        1.0  \n",
       "2021-12-25 10:00:00                  0                        1.0  \n",
       "2021-12-25 11:00:00                  0                        1.0  \n",
       "2021-12-25 12:00:00                  0                        1.0  \n",
       "2021-12-25 13:00:00                  0                        1.0  \n",
       "2021-12-25 14:00:00                  0                        1.0  \n",
       "2021-12-25 15:00:00                  0                        1.0  \n",
       "2021-12-25 16:00:00                  0                        1.0  \n",
       "2021-12-25 17:00:00                  0                        1.0  \n",
       "2021-12-25 18:00:00                  0                        1.0  \n",
       "2021-12-25 19:00:00                  0                        1.0  \n",
       "2021-12-25 20:00:00                  0                        1.0  \n",
       "2021-12-25 21:00:00                  0                        1.0  \n",
       "2021-12-25 22:00:00                  0                        1.0  \n",
       "2021-12-25 23:00:00                  0                        1.0  \n",
       "2022-12-25 00:00:00                  0                        1.0  \n",
       "2022-12-25 01:00:00                  0                        1.0  \n",
       "2022-12-25 02:00:00                  0                        1.0  \n",
       "2022-12-25 03:00:00                  0                        1.0  \n",
       "2022-12-25 04:00:00                  0                        1.0  \n",
       "2022-12-25 05:00:00                  0                        1.0  \n",
       "2022-12-25 06:00:00                  0                        1.0  \n",
       "2022-12-25 07:00:00                  0                        1.0  \n",
       "2022-12-25 08:00:00                  0                        1.0  \n",
       "2022-12-25 09:00:00                  0                        1.0  \n",
       "2022-12-25 10:00:00                  0                        1.0  \n",
       "2022-12-25 11:00:00                  0                        1.0  \n",
       "2022-12-25 12:00:00                  0                        1.0  \n",
       "2022-12-25 13:00:00                  0                        1.0  \n",
       "2022-12-25 14:00:00                  0                        1.0  \n",
       "2022-12-25 15:00:00                  0                        1.0  \n",
       "2022-12-25 16:00:00                  0                        1.0  \n",
       "2022-12-25 17:00:00                  0                        1.0  \n",
       "2022-12-25 18:00:00                  0                        1.0  \n",
       "2022-12-25 19:00:00                  0                        1.0  \n",
       "2022-12-25 20:00:00                  0                        1.0  \n",
       "2022-12-25 21:00:00                  0                        1.0  \n",
       "2022-12-25 22:00:00                  0                        1.0  \n",
       "2022-12-25 23:00:00                  0                        1.0  \n",
       "\n",
       "[48 rows x 36 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Show duplicated\n",
    "features[features.index.duplicated()] # This comes from the binary dataset. Why?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "98875500-9b92-4632-82d1-41cff4427225",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop duplicates (WHY are here duplicates?!)\n",
    "features = features[~features.index.duplicated(keep='first')]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8e76b1d0-0c1d-4399-ad18-8e1644453351",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Die indices überlappen sich nicht überall. 4 rows fehlen bei passengers. Warum?\n",
    "# Die indices überlappen sich nicht überall. 4 rows fehlen bei passengers. Warum?\n",
    "# 26 und 27 März 2023 fehlt in features\n",
    "# 23 und 24 November 2022, 22 Dezember 2022, und 29 und 30.8 fehlen in passengers\n",
    "\n",
    "# Preliminary\n",
    "passengers = passengers.resample(\"H\").ffill()\n",
    "features = features.resample(\"H\").ffill()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "32581a5b-b080-4106-8efd-bab663207062",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Split into training and test split\n",
    "n_splits = 2\n",
    "tscv = TimeSeriesSplit(n_splits)\n",
    "\n",
    "y = passengers[[\"total\"]].copy()\n",
    "X = features.copy()\n",
    "\n",
    "for train_index, test_index in tscv.split(passengers):\n",
    "    X_train, X_test = X.iloc[train_index, :], X.iloc[test_index,:]\n",
    "    y_train, y_test = y.iloc[train_index], y.iloc[test_index]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "7816680d-1729-4636-a3f7-368e47ad558e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Standardize the Data to obtain better results\n",
    "# Only standardize non binary data\n",
    "non_binary = ['PPP', 'Population', 'Guests', 'Traffic', 'Sunshine', 'Retail']\n",
    "X_train_nb = X_train[non_binary]\n",
    "X_test_nb = X_test[non_binary]\n",
    "\n",
    "# Standardize data\n",
    "scaler = StandardScaler()\n",
    "\n",
    "X_train_scaled = pd.DataFrame(scaler.fit_transform(X_train_nb), columns = X_train_nb.columns).set_index(X_train_nb.index)\n",
    "X_test_scaled = pd.DataFrame(scaler.transform(X_test_nb), columns = X_test_nb.columns).set_index(X_test_nb.index)\n",
    "\n",
    "# Concatenate with dummy variables\n",
    "X_train_scaled = pd.merge(X_train_scaled, X_train[binary.columns], how = \"left\", left_index = True, right_index = True)\n",
    "X_test_scaled = pd.merge(X_test_scaled, X_test[binary.columns], how = \"left\", left_index = True, right_index = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2ce52f63-82dc-4306-910f-c9521f2fd522",
   "metadata": {},
   "source": [
    "# Building the model"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98f2209b-cc55-4168-a63e-56eef946a1e9",
   "metadata": {},
   "source": [
    "Use Lasso to find most important features"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "ce2e23a9-ed8b-4288-b323-a96026693450",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LassoCV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "b723ab53-3e35-4ab3-a9e2-e550fa008907",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Selected Alpha:  0.00187\n",
      "Lasso dropped 20 coefficients\n"
     ]
    }
   ],
   "source": [
    "# Use TimeSeriesSplit for cross-validation\n",
    "tscv_cv = TimeSeriesSplit(n_splits=3) \n",
    "\n",
    "# Apply LassoCV\n",
    "lasso_cv = LassoCV(alphas=np.logspace(-3, 3, 200), cv=tscv_cv)\n",
    "lasso_cv.fit(X_train_scaled, y_train.values.ravel())\n",
    "\n",
    "# Display the selected alpha\n",
    "print(f\"Selected Alpha: {lasso_cv.alpha_: 0.5f}\")\n",
    "\n",
    "# Examine coefficents\n",
    "coefficients_df = pd.DataFrame({\"Coefficient\": lasso_cv.coef_}, index = X_train_scaled.columns)\n",
    "# Show relevant and irrelevant coffecients\n",
    "zero_coefficents = coefficients_df[coefficients_df[\"Coefficient\"] == 0]\n",
    "non_zero_coefficents = coefficients_df[coefficients_df[\"Coefficient\"] != 0]\n",
    "print(f\"Lasso dropped {zero_coefficents.shape[0]} coefficients\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "d1bbf85b-60ee-457e-9a59-d84230fec1d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1000x600 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# ToDo: Different colors\n",
    "# Plot the horizontal bar chart\n",
    "plt.figure(figsize=(10, 6))\n",
    "non_zero_coefficents.sort_values(by='Coefficient').plot.barh(color='teal')\n",
    "plt.title('Lasso Coefficients')\n",
    "plt.xlabel('Coefficient Value')\n",
    "plt.ylabel('Features')\n",
    "plt.grid(axis='x', linestyle='--', alpha=0.6);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9dee295e-f07b-493b-928c-ae856a101de9",
   "metadata": {},
   "source": [
    "## ToD0: Make chart that shows how values converge"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "534ebcdb-245f-4060-9886-ae29e611a085",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Drop the zero coefficents\n",
    "non_zero_coef = list(non_zero_coefficents.index)\n",
    "X_train_scaled = X_train_scaled[non_zero_coef].copy()\n",
    "X_test_scaled = X_test_scaled[non_zero_coef].copy()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0628cf17-5d38-471e-af88-ae4a985979ff",
   "metadata": {},
   "source": [
    "## Training the LSTM"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5cc307c-8c3d-4a61-a09f-ec0b13059259",
   "metadata": {},
   "source": [
    "Did not use RNN because of vanishing gradient. SHould not forget what happened 10 hours before Also see correlogram"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "089e1f6b-d5a8-4c33-866b-a035cddc7be4",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2023-11-23 14:23:41.475338: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\n",
      "2023-11-23 14:23:41.478746: I external/local_tsl/tsl/cuda/cudart_stub.cc:31] Could not find cuda drivers on your machine, GPU will not be used.\n",
      "2023-11-23 14:23:41.512795: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "2023-11-23 14:23:41.512821: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "2023-11-23 14:23:41.513844: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
      "2023-11-23 14:23:41.519906: I external/local_tsl/tsl/cuda/cudart_stub.cc:31] Could not find cuda drivers on your machine, GPU will not be used.\n",
      "2023-11-23 14:23:41.520385: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\n",
      "To enable the following instructions: AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\n",
      "2023-11-23 14:23:42.587515: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT\n"
     ]
    }
   ],
   "source": [
    "# Import necessary libraries\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import LSTM, Dense"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "adb838cd-b3f2-4a5d-bf24-0645e2140285",
   "metadata": {},
   "outputs": [],
   "source": [
    "### Potentials\n",
    "# Add stateful\n",
    "# Add lags\n",
    "# Optimize\n",
    "# Show improvement per batch\n",
    "# Hyperparameter scaling\n",
    "# Which loss and optimizer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "bc315354-d228-49d7-891e-aad32514eebf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "385/385 [==============================] - 6s 11ms/step - loss: 0.5420 - accuracy: 0.0028\n"
     ]
    }
   ],
   "source": [
    "batch_size = 1\n",
    "\n",
    "lstm = Sequential()\n",
    "\n",
    "# Add time steps?!\n",
    "# Stateful wirklich true?\n",
    "lstm.add(LSTM(units=50, input_shape=(X_train_scaled.shape[1],1)))\n",
    "lstm.add(Dense(units=1, activation = \"relu\"))\n",
    "# Welcher loss function?\n",
    "lstm.compile(optimizer='adam', loss='mean_squared_error', metrics=['accuracy'])\n",
    "\n",
    "# Train the model\n",
    "lstm.fit(X_train_scaled, y_train, epochs=1, batch_size=32)\n",
    "\n",
    "# Evaluate model performance\n",
    "scores = lstm.evaluate(X_train_scaled, y_train, batch_size=batch_size, verbose=0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "598174dc-191c-4c1b-94a7-2a73f742eda7",
   "metadata": {},
   "source": [
    "## Optimize model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "04941363-1d36-40e3-812a-63ac2b4abd06",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Trial 5 Complete [00h 03m 21s]\n",
      "val_loss: 0.2425478994846344\n",
      "\n",
      "Best val_loss So Far: 0.2425478994846344\n",
      "Total elapsed time: 00h 14m 05s\n"
     ]
    }
   ],
   "source": [
    "# Learning rate\n",
    "from tensorflow import keras\n",
    "from tensorflow.keras import layers\n",
    "from kerastuner.tuners import RandomSearch\n",
    "# Can you use random search for Time Series\n",
    "# Define the model-building function\n",
    "def build_model(hp):\n",
    "    \n",
    "    model = keras.Sequential()\n",
    "    model.add(LSTM(units=50, input_shape=(X_train_scaled.shape[1],1)))\n",
    "    \n",
    "    # Tune the number of Dense layers\n",
    "    for i in range(hp.Int('num_layers', 1, 3)):\n",
    "        model.add(layers.Dense(units=hp.Int('units_' + str(i), min_value=32, max_value=256, step=32)))\n",
    "        \n",
    "    model.add(layers.Dropout(0.2))\n",
    "\n",
    "    # Output layer\n",
    "    model.add(layers.Dense(1, activation = \"relu\")) \n",
    "\n",
    "    # Compile the model\n",
    "    model.compile(optimizer=keras.optimizers.Adam(hp.Choice('learning_rate', values=[1e-2, 1e-3, 1e-4])),\n",
    "                  loss='mean_squared_error') \n",
    "\n",
    "    return model\n",
    "\n",
    "# Instantiate the tuner\n",
    "tuner = RandomSearch(\n",
    "    build_model,\n",
    "    objective= 'val_loss',\n",
    "    max_trials= 5, \n",
    ")\n",
    "\n",
    "# Perform hyperparameter search\n",
    "tuner.search(X_train_scaled, y_train,\n",
    "             epochs=50,\n",
    "             validation_split= 0.2) # What does that mean?\n",
    "\n",
    "# Get the best hyperparameters\n",
    "best_hps = tuner.get_best_hyperparameters(num_trials=1)[0]\n",
    "\n",
    "# Build the best model\n",
    "best_model = tuner.hypermodel.build(best_hps)\n",
    "\n",
    "#stop_early = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "70e61032-5e98-4832-9928-4cb137175fe0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "192/192 [==============================] - 1s 4ms/step\n"
     ]
    }
   ],
   "source": [
    "pred = best_model.predict(X_test_scaled)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a3c87d2a-a2bb-4b5b-9083-29c53ce42289",
   "metadata": {},
   "source": [
    "## Haben wir wirklich kein DataLeakage drin?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73c8b405-46bb-4a54-a50e-562b7a94cb9b",
   "metadata": {},
   "source": [
    "## Making predictions"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8bf40e89-b6c0-4d98-8e50-25a58c74ac85",
   "metadata": {},
   "source": [
    "### Coole graphen zeigen. Plot of mse after each epoch; JEDEN INPUT VERSTEHEN!!!!!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "0bf07527-73c9-4353-8149-7e0f4f078d50",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Generate predictions (not yet converted back to normal data)\n",
    "def generate_prediction(X):\n",
    "    # Chnage best model!\n",
    "    predicted_scaled = pd.DataFrame(best_model.predict(X), index = X.index)\n",
    "    predicted_scaled.columns = [\"Prediction\"]\n",
    "    return predicted_scaled"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "d274920c-f2c3-409a-920c-2a177b4f7f8b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# invert differenced value\n",
    "def inverse_difference(yhat, history = passengers_df, interval=24):\n",
    "    # Merge the logged actual data and the prediction\n",
    "    x = pd.merge(history[[\"log\"]], yhat, left_index = True, right_index = True)\n",
    "    \n",
    "    # Shift by the number of periods used to remove the seasonality\n",
    "    x[\"Shifted\"] = x.log.shift(interval)\n",
    "    # Drop the 24 days for which no previous season available\n",
    "    x = x.dropna()\n",
    "    # Show to actual prediction by summing the prediction and the past seasonal value and reversing the log transformation\n",
    "    x[\"pred\"] = np.exp(x.Prediction+x.Shifted)\n",
    "    # Show the actual data by reversing the log transformation\n",
    "    x[\"actual\"] = np.exp(x.log)\n",
    "    return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "89aac667-8caf-47d4-b10c-8be24d6728e3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "192/192 [==============================] - 1s 4ms/step\n"
     ]
    }
   ],
   "source": [
    "predicted_scaled = generate_prediction(X_test_scaled)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "70acd860-a5c7-4106-b20f-913ba5aa372a",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = inverse_difference(predicted_scaled)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "5e7ea92a-a602-4e05-816b-75974d0ee56c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7f21c1e4c250>]"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "ax.plot(x.pred.resample(\"D\").sum(), c=\"r\")\n",
    "ax.plot(x.actual.resample(\"D\").sum(), c=\"blue\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9b26e2cb-44cb-42be-baac-65b6c9e71aff",
   "metadata": {},
   "outputs": [],
   "source": [
    "todo:\n",
    "- All in one file. Danach files spliten\n",
    "- Vorher testen ob keine Daten fehlen\n",
    "- Beim Model wirklich alles verstehen. Was einzelne Parameter bedeuten\n",
    "- Heute: 1 finales Model bauen mit predictions und graph, der verlauf zeigt\n",
    "- Wochenende aufräumen und konsolidieren"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
